# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys

sys.path.insert(0, os.path.abspath("../../pdrtpy"))


# -- Project information -----------------------------------------------------

# import sphinx_automodapi
from time import localtime

import pdrtpy
from pdrtpy import __version__

project = "pdrtpy"
# The full version, including alpha/beta/rc tags
# The short X.Y version
version = __version__
# The full version, including alpha/beta/rc tags
release = __version__
year = str(localtime().tm_year)
author = pdrtpy.AUTHORS
copyright = year + " " + author


source_suffix = ".rst"
master_doc = "index"

# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "myst_nb",
    "sphinx.ext.autodoc",
    "sphinx.ext.doctest",
    "sphinx.ext.graphviz",
    "sphinx.ext.autosectionlabel",
    "sphinx.ext.intersphinx",
    "sphinx.ext.todo",
    "sphinx.ext.coverage",
    "sphinx.ext.mathjax",
    "sphinx.ext.ifconfig",
    "sphinx.ext.viewcode",
    "sphinxcontrib.mermaid",
    "numpydoc",
    "sphinx_inline_tabs",
]
numpydoc_show_class_members = True
numpydoc_class_members_toctree = False
autosummary_generate = True

autodoc_docstring_signature = True
autodoc_default_options = {"members": None, "undoc-members": None}
# Make sure the targets are unique
autosectionlabel_prefix_document = True

# TODO: These appear to have no effect
mermaid_init_js = "mermaid.initialize({startOnLoad:true, useMaxWidth:false});"

# TODO: These appear to have no effect
mermaid_verbose = True

intersphinx_mapping = {
    "python": ("https://docs.python.org/3/", None),
    "numpy": ("https://numpy.org/doc/stable/", None),
    "scipy": ("https://docs.scipy.org/doc/scipy/", None),
    "astropy": ("https://docs.astropy.org/en/stable/", None),
    "matplotib": ("https://matplotlib.org/stable", None),
    "lmfit": ("https://lmfit.github.io/lmfit-py/", None),
    "pandas": ("https://pandas.pydata.org/docs/", None),
    "specutils": ("https://specutils.readthedocs.io/en/stable/", None),
}

# The reST default role (used for this markup: `text`) to use for all
# documents. Set to the "smart" one.
# This lets e.g, `~astropy.Foo` link without using :class:
default_role = "obj"

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]
# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"


# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"

# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
# html_theme = 'bizstyle'
html_theme = "sphinx_book_theme"
html_theme_options = {
    "logo": {
        "image_light": "_static/icon/pdrtpy_logo_lightmode.png",
        "image_dark": "_static/icon/pdrtpy_logo_darkmode.png",
    }
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
# html_static_path = ['_static']

# Cache notebooks to only re-run when cells change
##nb_execution_mode = "cache"

# Where to store the notebook cache
# nb_execution_cache_path = "jupyter_cache"
